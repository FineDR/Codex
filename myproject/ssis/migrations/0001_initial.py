# Generated by Django 4.2 on 2024-10-15 15:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserTB',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=100)),
                ('middleName', models.CharField(blank=True, max_length=100, null=True)),
                ('surName', models.CharField(max_length=100)),
                ('passport', models.ImageField(blank=True, null=True, upload_to='passport_photos/')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phoneNumber', models.CharField(max_length=15)),
                ('gender', models.CharField(max_length=10)),
                ('role', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=128)),
                ('confirmPassword', models.CharField(max_length=128)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForumTB',
            fields=[
                ('forumID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.CharField(choices=[('academics', 'Academics'), ('psychosocials', 'Psychosocials'), ('groups', 'Groups')], default='academics', max_length=20)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('video_file', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Create'), ('view', 'View'), ('delete', 'Delete')], max_length=50)),
                ('details', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentTB',
            fields=[
                ('studentID', models.AutoField(primary_key=True, serialize=False)),
                ('enrollmentDate', models.DateField()),
                ('maritalStatus', models.CharField(max_length=10)),
                ('nidaNumber', models.CharField(max_length=20, unique=True)),
                ('program', models.CharField(max_length=100)),
                ('regionName', models.CharField(max_length=255)),
                ('userID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resourceID', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('file_path', models.FileField(upload_to='resources/')),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('academic', 'Academic'), ('psychosocial', 'Psychosocial')], max_length=20)),
                ('uploadedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_resources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostTB',
            fields=[
                ('postID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('category', models.CharField(blank=True, choices=[('academics', 'Academics'), ('psychosocials', 'Psychosocials'), ('groups', 'Groups')], max_length=20, null=True)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('forumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssis.forumtb')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantTB',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('joinedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('forumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssis.forumtb')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTB',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('forumID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssis.forumtb')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification_USER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiverID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_txt', models.TextField()),
                ('rating', models.IntegerField()),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentsTB',
            fields=[
                ('appointment_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('canceled', 'Canceled')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('tutor', 'Tutor'), ('counselor', 'Counselor')], max_length=20)),
                ('appointment_time', models.DateTimeField()),
                ('receiverID', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='appointments_received', to=settings.AUTH_USER_MODEL)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_made', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
